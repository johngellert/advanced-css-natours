.btn {
  /* because the button is a anchor we can use the pseudo class link */
  /* pseudo class is a special state of the selector. Style elements under special condition */
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;

    /* because the button is text, it is displayed inline */
    /* to add some padding to the element, display inline-block */
    display: inline-block;
    border-radius: 10rem;

    /* this will add animation without specifying using @keyframes
      all we have to use is transition and specify the properties we want to animate
      and in this case we are selecting all properties and .2 seconds */
    transition: all 0.2s;

    /* need to set this to relative so that the absolute positioning of btn::after
      can use this as a reference point. */
    position: relative;
    font-size: 1.6rem;
  }

  &:hover {
    transform: translateY(-3px);

    /* first value is shadow in the x direction, we want 0 */
    /* second value is shadow in the y direction,  */
    /* third value is the blur, more blur makes it look further away from page */
    /* fourth value is the color */
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    &::after {
      /* use scale to make bigger */
      /* transform: scale(1.5); */
      transform: scaleX(1.4) scaleY(1.6);

      /* this is the trick to fading something out */
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-1px);

    /* decrease the shadow and blur to make it look like the button is closer to
        the page and getting pushed down */
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  /* after pseudo element is treated like a child of the button so if we specify height 
    100%, it means 100% of the button */
  &::after {
    /* always have to define content */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;

    /* based of relative position of button above */
    position: absolute;
    top: 0;
    left: 0;

    /* want to place this behind so add a z index of -1 */
    z-index: -1;

    transition: all 0.4s;
  }

  &--animated {
    /* last value is animation delay */
    animation: moveInBottom 0.5s ease-out 0.75s;

    /* apply the animation style of the 0% before the animation starts */
    animation-fill-mode: backwards;
  }
}
